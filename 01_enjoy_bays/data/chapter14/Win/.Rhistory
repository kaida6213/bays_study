library(tidyverse)
library(gridExtra)
# データの読み込み
data <- read_csv("data.csv")　　　　　　　#７つの原稿の123日分の執筆状況データ
draft_info <- read_csv("draft_info.csv")　#７つの原稿の情報（合計文字数と動機づけの有無）
# 各原稿の特徴の確認（書籍の表１）
draft_info
# 原稿の合計文字数の要約統計量
summary(draft_info$total)
# 各原稿の累積執筆量のプロット（１つの図に重ねて表示）
data %>%
gather(draft,value,-day) %>%
ggplot(aes(x = day, y = value,color = draft)) +
geom_line()  +
geom_point(size = 0.4) +
scale_y_continuous(name = "Writing amount (characters)") +
scale_x_continuous(name = "Day")
for(i in 1:7 ){
eval(parse(text = paste0("d",i, "<- data %>%",
"ggplot(aes(x = day, y = draft_",i,")) +
geom_point(size = 0.2) ")))}
grid.arrange(d1,d2,d3,d4,d5,d6,d7,ncol = 2)
# 累積執筆量のシミュレーション（書籍の図3）
mu_1 <- 50   #変化点前のその日の執筆量の平均
mu_2 <- 400  #変化点後前のその日の執筆量の平均
sigma <- 30　#標準偏差
cp <- 23     #変化点
day <- 1:31  #執筆日数
text <- NULL #累積執筆量を格納する場所
for(i in 1:length(day)){　# 生成モデルに従って累積執筆量を作成
if(i <= cp){
if(i==1){
text[1] <- rnorm(1,mu_1,sigma)
}else{
text[i] <- rnorm(1,mu_1 + text[i-1],sigma)
}
}else{
text[i] <- rnorm(1,mu_2 + text[i-1],sigma)
}
}
sim_data <- tibble(day = day,text = text) #データフレーム化
sim_data %>%　　# 図3の作成
ggplot(aes(x = day, y = text)) +
geom_point(shape = 1,size = 1) +
geom_line(aes(x = day, y = text)) +
geom_vline(xintercept=cp, linetype="dashed", colour="black")
# 変化点検出のStanコードをコンパイル
change_point_c <- stan_model(file = 'change_point.stan')
# MCMCの実行と推定結果を出力する自作関数writing_analysis()の読み込み
source("writing_analysis_function.R")
# writing_analysis()関数の使い方
# writing_analysis()関数では，日数の時系列データと文章量の時系列データの２つ引数がある。
# writing_analysis(日数の時系列データ,文章量の時系列データ)と設定して実行すると
# StanによるMCMCサンプリングと結果と図の出力をする。
# 出力は以下の通りになる。
# 　change_point: 変化点検出モデルのMCMCサンプル
# 　change_point_Rhat: 変化点検出モデルのRhat
# 　cp: 変化点
# 　cp_plot: 変化点の確率分布
# 　data_cp_plot: データに変化点をプロット
